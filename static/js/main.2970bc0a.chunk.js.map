{"version":3,"sources":["components/Excrsise2.js","components/Navbar.js","components/Excersice1.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Excrsise2","_useState","useState","_useState2","Object","slicedToArray","setColor","react_default","a","createElement","type","style","backgroundColor","onClick","document","body","Navbar","props","className","concat","mode","dist","to","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","height","width","cursor","toggleMenu","border","components_Excrsise2","defaultProps","Excersice1","disabled","text","length","handleClear","handleCopy","handleExtraSpace","handleCharAt","TextForm","setText","Fragment","color","heading","htmlFor","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","components_Excersice1","getElementById","select","execCommand","getSelection","removeAllRanges","replace","charAt","split","filter","element","Alert","alert","word","lower","slice","capitalize","msg","data-bs-dismiss","About","myStyle","borderColor","aria-labelledby","data-bs-parent","App","_useState3","_useState4","setAlert","cls","classList","remove","add","components_Navbar","components_Alert","react_router_dist","exact","path","components_TextForm","message","setTimeout","components_About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2970bc0a.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\nfunction Excrsise2() {\r\n\r\n    const [color, setColor] = useState('');\r\n    \r\n    // red color\r\n    const flateColorRed = () =>{\r\n        setColor(document.body.style.backgroundColor = 'red')\r\n    }\r\n\r\n    // blue color\r\n    const flateColorBlue = () =>{\r\n        setColor(document.body.style.backgroundColor = 'blue')\r\n    }\r\n\r\n    // yellow color \r\n    const flateColorYellow = () =>{\r\n        setColor(document.body.style.backgroundColor = 'yellow')\r\n    }\r\n\r\n    //green color\r\n\r\n    const flateColorGreen = () =>{\r\n        setColor(document.body.style.backgroundColor = 'green')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        {/* red */}\r\n        <button type=\"button\" style={{backgroundColor: 'red'}} onClick={flateColorRed}></button>\r\n\r\n        {/* blue */}\r\n        <button type=\"button\" style={{backgroundColor: 'blue'}} onClick={flateColorBlue}></button>\r\n\r\n        {/* yellow */}\r\n        <button type=\"button\" style={{backgroundColor: 'yellow'}} onClick={flateColorYellow}></button>\r\n\r\n        {/* green */}\r\n        <button type=\"button\" style={{backgroundColor: 'green'}} onClick={flateColorGreen}></button>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Excrsise2","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Excrsise2 from './Excrsise2'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    {/* <a className=\"navbar-brand\" href='#'>{props.title}</a> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          {/* <a className=\"nav-link\" href=\"about\">{props.aboutText}</a> */}\r\n        </li>\r\n       \r\n      </ul>\r\n      \r\n      {/* Excersice 2 solution in harry */}\r\n      <div className=\"d-flex\">\r\n\r\n       <div className='bg-danger rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer'}} onClick={()=>{props.toggleMenu('danger')}}></div>\r\n\r\n            <div className='bg-primary rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer'}} onClick={()=>{props.toggleMenu('primary')}}></div>\r\n          \r\n            <div className='bg-warning rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer'}} onClick={()=>{props.toggleMenu('warning')}}></div>\r\n\r\n            <div className='bg-success rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer'}} onClick={()=>{props.toggleMenu('success')}}></div>\r\n\r\n            <div className='bg-light rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer',border:'1px solid black'}} onClick={()=>{props.toggleMenu('light')}}></div>\r\n\r\n            <div className='bg-dark rounded mx-2' style={{height: '30px',width:'30px',cursor:'pointer'}} onClick={()=>{props.toggleMenu('dark') }}></div>\r\n            \r\n        </div> \r\n    \r\n      <div><Excrsise2 /></div>\r\n      {/* <div className={`form-check form-switch text-${props.mode ==='light' ? 'dark' : 'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMenu} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Mode</label>\r\n\r\n  </div> */}\r\n  {/* Excersise2 */}\r\n\r\n  \r\n  </div>\r\n    </div>\r\n \r\n \r\n</nav>\r\n  \r\n  )\r\n}\r\n// props --> componet ma argument pass krese \r\n\r\n// propsType -->\r\n//aama props ma value string ma j devani number ma  ke aema ny\r\nNavbar.propTypes = {title:PropTypes.string, aboutText:PropTypes.string,}\r\n\r\n// defaultProps -->\r\n//by default props pass no kre tyare aa value render thy jay\r\nNavbar.defaultProps = {\r\n   title: \"Set title here\",\r\n   aboutText: \"About text here\"\r\n    \r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nfunction Excersice1(props) {\r\n  return (\r\n    <div>\r\n      {/* clear text */}\r\n        <button  disabled={props.text.length===0} className='btn btn-primary' onClick={props.handleClear}>Clear Text</button>\r\n        \r\n\r\n       {/* copy text */}\r\n        <button disabled={props.text.length===0}  className='btn btn-primary mx-3' onClick={props.handleCopy}>Copy Text</button>\r\n\r\n       \r\n\r\n        {/* remove extraspaces */}\r\n        <button disabled={props.text.length===0}  className='btn btn-primary mx-3' onClick={props.handleExtraSpace}>Remove Extra Space</button>\r\n\r\n        {/* chatAt text */}\r\n        <button disabled={props.text.length===0}  className='btn btn-primary my-3' onClick={props.handleCharAt}>charAt </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Excersice1","import React, { useState } from \"react\";\r\nimport Excersice1 from \"./Excersice1\";\r\n\r\nfunction TextForm(props) {\r\n  //convert to uppercase\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpperCase = () => {\r\n    const newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"uppercase has been convert\",\"success\");\r\n  };\r\n\r\n  //convert to lowercase\r\n\r\n  const handleLowerCase = () => {\r\n    const newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"lowercase has been convert\",\"success\");\r\n  };\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  //excersice 1\r\n\r\n  //clear text\r\n\r\n  const handleClear = () => {\r\n    const newText = \" \";\r\n    setText(newText);\r\n    props.showAlert(\" has been  cleartext \",\"success\");\r\n  };\r\n\r\n  //copy text\r\n\r\n  const handleCopy = () => {\r\n   const texty = document.getElementById(\"myBox\");\r\n    texty.select();\r\n    document.execCommand(\"copy\");\r\n    document.getSelection().removeAllRanges();\r\n    // setText(text);\r\n  \r\n    // navigator.clipboard.writeText(text);\r\n    props.showAlert(\"coppied text to clipbord \",\"success\");\r\n  };\r\n\r\n  //remove extra space\r\n  const handleExtraSpace = () => {\r\n    const newText = text.replace(/ /g,'');\r\n    setText(newText);\r\n    props.showAlert(\" has been remove text \",\"success\");\r\n  };\r\n\r\n  //charAt in text\r\n\r\n  const handleCharAt = () =>{\r\n    const newText = text.charAt();\r\n    setText(newText)\r\n    props.showAlert(\" has been charAt  \",\"success\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-4\" style={{color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n        <div className=\"mb-3 my-4\">\r\n          <h3 className=\"mb-3\"> {props.heading}</h3>\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            Example Textarea\r\n          </label>\r\n          <textarea style={{backgroundColor: props.mode === 'dark' ? '#4b6584' : 'white', color: props.mode === 'dark' ? 'white' : 'black'}}\r\n      \r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"5\"\r\n            value={text}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n\r\n          {/* //convert to uppercase */}\r\n          <button  disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={handleUpperCase}>\r\n            Convert Uppercase\r\n          </button>\r\n\r\n          {/* convert to lowercase */}\r\n          <button disabled={text.length===0}\r\n            className=\"btn btn-primary my-3 mx-4\"\r\n            onClick={handleLowerCase}\r\n          > Convert Lowercase</button>\r\n\r\n          <Excersice1 handleClear={handleClear} handleCopy={handleCopy}  handleExtraSpace={handleExtraSpace} handleCharAt={handleCharAt} text={text}/>\r\n\r\n        </div>\r\n      \r\n      <div className=\"container my-4\">\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(\" \").filter((element)=>{return element.length !==0}).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text : 'Nothing to preview'}</p>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TextForm;\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n { props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show role=alert `}>\r\n  <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React,{useState} from \"react\";\r\n\r\nfunction About(props) {\r\n\r\n    // const [myStyle, setMystyle ]= useState({\r\n    //     color: \"black\",\r\n    //     backgroundColor: \"white\",\r\n    //     border: '1px solid white'\r\n    // })\r\n\r\n    let myStyle = {\r\n      color:props.mode === 'dark'?'white':'black', \r\n      backgroundColor:props.mode === 'dark'?'#4b6584':'white',\r\n      border:'1px solid',\r\n      borderColor:'white'\r\n    }\r\n\r\n    const [btnText, setBtntext] = useState('Enable Light  Mode')\r\n\r\n    // const handleEnableDarkmode = () =>{\r\n    \r\n    //     if(myStyle.color === 'black'){\r\n    //         setMystyle(\r\n    //             {\r\n    //                 color: 'white',\r\n    //                 backgroundColor: 'black'\r\n    //             }\r\n    //         )\r\n            \r\n    //         setBtntext('Enable Dark Mode')\r\n    //     }\r\n    //     else{\r\n    //         setMystyle(\r\n    //             {\r\n    //                 color: 'black',\r\n    //                 backgroundColor: 'white'\r\n    //             }\r\n    //         )\r\n    //         setBtntext('Enable Light  Mode')\r\n    //     }\r\n    // }\r\n  return (\r\n    <div className=\"container\" style={{ color:props.mode === 'dark'?'white':'black'}}>\r\n        <h2 className=\"my-3\">About us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <button className=\"btn btn-primary my-3\" onClick={handleEnableDarkmode}>{btnText}</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About  from './components/About';\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n\nfunction App() {\n\n  \n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n       setAlert({\n        msg: message,\n        type: type\n       })\n\n       setTimeout( () =>{\n        setAlert(null);\n       }, 3000)\n  }\n\n  const removeBodyClasses = () =>{\n    // document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n  }\n\n  const toggleMenu = (cls) => {\n\n    removeBodyClasses();\n    // console.log(cls);\n    document.body.classList.add('bg-'+cls);\n    \n    // if (mode === \"light\") {\n    //   setMode(\"dark\");\n    //   document.body.style.backgroundColor = \"#192a56\";\n    //   showAlert(\" Dark mode has been enable  \",\"success\");\n      // document.title = \"TextUtils - Dark mode\";\n      // setInterval(()=>{\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n\n      // setInterval(()=>{\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500)\n\n    // } else {\n\n    //   setMode(\"light\");\n    //   document.body.style.backgroundColor = \"white\";\n    //   showAlert(\" Light  mode has been enable \",\"success\");\n    //   // document.title = \"TextUtils - Light mode\";\n    // }\n  };\n  return(\n       <>\n     <BrowserRouter>\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMenu={toggleMenu}\n      />\n\n      <Alert alert={alert} />\n      <div className=\"container my-3\"> \n\n       <Routes>\n\n        {/* /user --> component 1 render\n        /user/home  --> component 2 render*/}\n        <Route exact  path='/' element={\n         <TextForm heading=\"Try TextUtilis - word counter, character counter, remove extra spaces\" mode={mode} showAlert={showAlert} toggleMenu={toggleMenu} /> }/>\n   \n        <Route exact path='/about' element={<About  mode={mode}/>}/> \n       </Routes>\n       </div>\n       </BrowserRouter>\n        {/* <About/> */}\n       \n     \n    </>\n)\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}